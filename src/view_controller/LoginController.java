package view_controller;

import java.net.URL;
import java.time.ZoneId;
import java.time.format.TextStyle;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import utils.ErrorHandler;

/**
 * Controller class that handles the main application login screen. Responsible
 * for handling user login attempts and error messages.
 *
 * @author Sakae Watanabe
 */
public class LoginController implements Initializable {

  //===========================================================================
  // Data Members
  //===========================================================================
  /** Resource bundle containing language translation properties. */
  private ResourceBundle resources;

  /** User name label located above user name text field. */
  @FXML
  private Label userNameLabel;

  /** Text field for user name input. */
  @FXML
  private TextField userNameField;

  /** Password label located above password field. */
  @FXML
  private Label passwordLabel;

  /** Password field for user's password input. */
  @FXML
  private PasswordField passwordField;

  /** Login button to submit credentials for validation. */
  @FXML
  private Button loginButton;

  /** Displays zoneId for user's default time zone. */
  @FXML
  private Label loginZone;

  /** Optional field for displaying error messages below time zone. */
  @FXML
  private Label loginErrorMessage;

  @Override
  public void initialize(URL location, ResourceBundle resources) {
    this.resources = resources;
    detectZoneID();

  }

  //===========================================================================
  // Event Detection & Handling
  //===========================================================================

  /**
   * Sends request to server to validate provided login credentials for user and password fields.
   *
   * @param event Event generated by user pushing loginButton.
   * @return True if credentials are matched, false otherwise.
   */
  @FXML
  private boolean verifyLogin(ActionEvent event) {
    boolean valid = true;
    String user = userNameField.getText();
    String password = passwordField.getText();
    List<String> errorMessages = new ArrayList<>();
    // TODO Implement UserDAO and UserDAOImpl
    if (user.isEmpty() || password.isEmpty()) {
      errorMessages.add("User Name and Password must be filled in.");
      ErrorHandler.warningPopup("Invalid Credentials", errorMessages);
      valid = false;
    }
    return valid;
  }

  /**
   * Checks default ZoneID to adjust timezone displayed on loginZone label. Time ZoneID displayed in
   * short format using default Locale.
   */
  private void detectZoneID() {
    ZoneId zoneID = ZoneId.systemDefault();
    String zoneText = zoneID.getDisplayName(TextStyle.SHORT, Locale.getDefault()) + "-" +
        zoneID.getDisplayName(TextStyle.FULL, Locale.getDefault());
    loginZone.setText(zoneText);
  }
}