package view_controller;

import dao.impl.UserDAOImpl;
import java.io.IOException;
import java.net.URL;
import java.time.ZoneId;
import java.time.format.TextStyle;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import model.User;
import utils.NotificationHandler;

/**
 * Controller class that handles the main application login screen. Responsible
 * for handling user login attempts and error messages.
 *
 * @author Sakae Watanabe
 */
public class LoginController implements Initializable {

  //===========================================================================
  // Data Members
  //===========================================================================
  /** Resource bundle containing language translation properties. */
  private ResourceBundle resources;

  /** UserDAOImpl object for obtaining user records. */
  private final UserDAOImpl userDAOImpl = new UserDAOImpl();

  /** User object for holding current record for validation.  */
  private User user = null;

  /** User name label located above user name text field. */
  @FXML
  private Label userNameLabel;

  /** Text field for user name input. */
  @FXML
  private TextField userNameField;

  /** Password label located above password field. */
  @FXML
  private Label passwordLabel;

  /** Password field for user's password input. */
  @FXML
  private PasswordField passwordField;

  /** Login button to submit credentials for validation. */
  @FXML
  private Button loginButton;

  /** Displays zoneId for user's default time zone. */
  @FXML
  private Label loginZone;

  /** Optional field for displaying error messages below time zone. */
  @FXML
  private Label loginErrorMessage;

  @Override
  public void initialize(URL location, ResourceBundle resources) {
    this.resources = resources;
    detectZoneID();
    passwordField.setOnAction(this::verifyLogin);
  }

  //===========================================================================
  // Event Detection & Handling
  //===========================================================================

  /**
   * Sends request to server to validate provided login credentials for user and
   * password fields. Logical checks are made for empty user name and password
   * fields, password validity, and existence of user in the database.
   *
   * @param event Event generated by user pushing loginButton.
   * @return True if credentials are matched, false otherwise.
   */
  @FXML
  private void verifyLogin(ActionEvent event) {
    String userName = userNameField.getText();
    String password = passwordField.getText();
    List<String> errorMessages = new ArrayList<>();

    if (userName.isEmpty() || password.isEmpty()) {
      errorMessages.add(resources.getString("emptyFields"));
    } else {
        user = userDAOImpl.getUserByName(userName);
        if (user != null) {
          if (!password.equals(user.getPassword())) {
            errorMessages.add(resources.getString("invalidPassword"));
          }
        } else {
            errorMessages.add(String.format(resources.getString("userNotFound"), userName));
        }
    }
    if (errorMessages.size() > 0) {
      NotificationHandler.warningPopup(resources.getString("loginError"), errorMessages);
      userNameField.requestFocus();
    } else {
      try {
        loadMainView(event);
      } catch (IOException e) {
        NotificationHandler.warningPopup("Main Screen", e.getMessage());
      }
    }
  }

  /**
   * Loads main application view and calls scene initialization method.
   *
   * @param event ActionEvent produced when user enters credentials.
   */
  @SuppressWarnings("DuplicatedCode")
  private void loadMainView(ActionEvent event) throws IOException {
    passwordField.clear();
    userNameField.clear();

    FXMLLoader loader = new FXMLLoader();
    loader.setLocation(getClass().getResource("/view_controller/MainView.fxml"));
    Parent parent = loader.load();
    Scene scene = new Scene(parent);

    MainViewController controller = loader.getController();
    controller.initData(user);

    Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
    stage.setScene(scene);
    stage.show();
  }

  /**
   * Checks default ZoneID to adjust timezone displayed on loginZone label. Time ZoneID displayed in
   * short format using default Locale.
   */
  private void detectZoneID() {
    ZoneId zoneID = ZoneId.systemDefault();
    String zoneText = zoneID.getDisplayName(TextStyle.SHORT, Locale.getDefault()) + "-" +
        zoneID.getDisplayName(TextStyle.FULL, Locale.getDefault());
    loginZone.setText(zoneText);
  }
}